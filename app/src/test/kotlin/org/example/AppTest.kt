/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import org.example.dto.HandlerInput
import org.example.dto.HandlerOutput
import org.example.github.GitHubApiClient
import org.example.github.dto.TodayGitHubContributes
import org.example.messenger.Messenger
import org.example.support.logger.Logger
import org.junit.jupiter.api.BeforeEach
import java.time.LocalDateTime
import kotlin.test.Test
import kotlin.test.assertEquals

class AppTest {
    private lateinit var app: App

    @BeforeEach
    fun setUp() {
        val dummyMessenger =
            object : Messenger {
                override fun sendMessage(
                    text: String,
                    logger: Logger,
                ) {
                    logger.log(text)
                }

                override fun sendGitHubContributesMessage(
                    contributes: TodayGitHubContributes,
                    logger: Logger,
                    now: LocalDateTime,
                ) {
                    logger.log("sendGitHubActivityMessage")
                }
            }

        app =
            App(
                messenger = dummyMessenger,
                gitHubApiClient =
                    object : GitHubApiClient(
                        page = 1,
                        perPage = 30,
                        username = "dummy",
                        token = "dummy",
                    ) {
                        override fun getTodayContributes(logger: Logger): TodayGitHubContributes {
                            return TodayGitHubContributes(
                                commit = 1,
                                openPullRequests = 0,
                                openIssues = 0,
                                username = username,
                            )
                        }
                    },
            )
    }

    @Test
    fun `handleRequest 메서드는 성공 메시지와 기여를 리턴한다`() {
        val consoleLoggerContext = ConsoleLoggerLambdaContext()

        val actual =
            app.handleRequest(
                input = HandlerInput("hi"),
                context = consoleLoggerContext,
            )

        assertEquals(
            HandlerOutput(
                message = "success.",
                contributes =
                    TodayGitHubContributes(
                        commit = 1,
                        openPullRequests = 0,
                        openIssues = 0,
                        username = "dummy",
                    ),
            ),
            actual,
        )
    }
}
