/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import org.example.dto.HandlerInput
import org.example.dto.HandlerOutput
import org.example.github.GitHubApiClient
import org.example.github.dto.TodayGitHubContributes
import org.example.messenger.Messenger
import org.example.support.logger.ConsoleLoggerLambdaContext
import org.example.support.logger.Logger
import org.junit.jupiter.api.BeforeEach
import java.time.LocalDateTime
import kotlin.test.Test
import kotlin.test.assertEquals

class AppTest {
    private lateinit var app: App

    @BeforeEach
    fun setUp() {
        val dummyMessenger = createDummyMessenger()
        val createTodayGitHubContributes = createTodayGitHubContributes()

        val gitHubApiClient =
            object : GitHubApiClient(username = "dummy", token = "dummy") {
                override suspend fun getTodayContributes(logger: Logger): TodayGitHubContributes = createTodayGitHubContributes
            }

        app = App(messenger = dummyMessenger, gitHubApiClient = gitHubApiClient)
    }

    @Test
    fun `handleRequest 메서드는 성공 메시지와 기여를 리턴한다`() {
        val consoleLoggerContext = ConsoleLoggerLambdaContext()
        val contributes = createTodayGitHubContributes()

        val actual = app.handleRequest(input = HandlerInput("hi"), context = consoleLoggerContext)

        assertEquals(HandlerOutput("success.", contributes), actual)
    }

    private fun createTodayGitHubContributes(
        commit: Int = 1,
        openPullRequests: Int = 0,
        openIssues: Int = 0,
        username: String = "dummy",
        todayCreateRepositoryCount: Int = 0,
        todayForkCount: Int = 0,
    ) = TodayGitHubContributes(
        username = username,
        commit = commit,
        openPullRequests = openPullRequests,
        openIssues = openIssues,
        createRepository = todayCreateRepositoryCount,
        fork = todayForkCount,
    )

    private fun createDummyMessenger() =
        object : Messenger {
            override fun sendMessage(
                text: String,
                logger: Logger,
            ) {
                // do nothing
            }

            override fun sendGitHubContributesMessage(
                contributes: TodayGitHubContributes,
                logger: Logger,
                now: LocalDateTime,
            ) {
                // do nothing
            }

            override fun sendErrorMessage(
                error: Exception,
                logger: Logger,
            ) {
                // do nothing
            }
        }
}
